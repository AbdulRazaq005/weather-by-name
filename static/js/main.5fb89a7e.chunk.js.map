{"version":3,"sources":["components/CurrentReport.jsx","components/MapComp.jsx","components/SearchBar.jsx","App.js","index.js"],"names":["CurrentReport","obj","className","id","city","country","temperature","feels_like","humidity","main","description","MapComp","currentPos","mapObj","getReportByMap","console","log","useState","positionGot","setPositionGot","useEffect","lat","lon","map","setMap","DisplayPosition","getCenter","position","setPosition","useCallback","setView","zoom","onMove","on","off","toFixed","lng","displayMap","useMemo","MapContainer","center","scrollWheelZoom","whenCreated","TileLayer","attribution","url","onClick","SearchBar","fun","string","setstring","onSubmit","event","preventDefault","type","name","placeholder","onChange","e","target","value","App","t","setT","report","setReport","coord","setCoord","query","setQuery","axios","get","then","response","data","temp","sys","weather","catch","error","alert","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fb89a7e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function CurrentReport({ obj }) {\r\n  return (\r\n    <div className=\"current-report\">\r\n      <br />\r\n      <h1>Weather Report</h1>\r\n      <div className=\"resImage\"></div>\r\n      <div className=\"cityDetails\">\r\n        <h2 id=\"city\">\r\n          Place : {obj.city}, {obj.country}\r\n        </h2>\r\n      </div>\r\n      <div className=\"resDetail\">\r\n        <h2 id=\"temp\">{obj.temperature}°С</h2>\r\n        <h2 className=\"resNum\">Feels Like : {obj.feels_like}</h2>\r\n        <h2 className=\"resNum\">Humidity : {obj.humidity}</h2>\r\n        <h2 id=\"desc\">Main : {obj.main}</h2>\r\n        <h2 id=\"desc\">Description : {obj.description}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nexport default function MapComp({ mapObj, getReportByMap }) {\r\n  //   var positionGot = [mapObj.lat, mapObj.lon];\r\n  var currentPos;\r\n  // ? [mapObj.lat, mapObj.lon]\r\n  // : [18, 18];\r\n  console.log(\"mapObj: \", mapObj);\r\n\r\n  const [positionGot, setPositionGot] = useState([0, 0]);\r\n\r\n  useEffect(() => {\r\n    setPositionGot([mapObj.lat, mapObj.lon]);\r\n    console.log(\"useEffect\", positionGot);\r\n  }, [mapObj.lat, mapObj.lon]);\r\n\r\n  const [map, setMap] = useState(null);\r\n\r\n  function DisplayPosition({ map }) {\r\n    const [position, setPosition] = useState(map.getCenter());\r\n\r\n    const onClick = useCallback(() => {\r\n      map.setView([0, 0], 3);\r\n    }, [map]);\r\n\r\n    useEffect(() => {\r\n      console.log(\"map set to:\", positionGot);\r\n      map.setView([mapObj.lat, mapObj.lon], mapObj.zoom);\r\n    }, [positionGot]);\r\n\r\n    const onMove = useCallback(() => {\r\n      setPosition(map.getCenter());\r\n    }, [map]);\r\n\r\n    useEffect(() => {\r\n      map.on(\"move\", onMove);\r\n      setPosition(map.getCenter());\r\n      //   console.log(\"position:\", map.getCenter());\r\n      return () => {\r\n        map.off(\"move\", onMove);\r\n      };\r\n    }, [map, onMove]);\r\n\r\n    useEffect(() => {\r\n      currentPos = [map.getCenter()];\r\n      // console.log(\"position:\", currentPos);\r\n    }, [map.getCenter()]);\r\n\r\n    return (\r\n      <p className=\"map-indicator\">\r\n        latitude: {position.lat.toFixed(4)}\r\n        <br />\r\n        longitude: {position.lng.toFixed(4)}\r\n        {/* <button onClick={onClick}>reset</button> */}{\" \"}\r\n        {/* <button\r\n          onClick={() => {\r\n            getReportByMap(position.lat.toFixed(4), position.lng.toFixed(4));\r\n          }}\r\n        >\r\n          Get Report for this Location\r\n        </button> */}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const displayMap = useMemo(\r\n    () => (\r\n      <MapContainer\r\n        center={positionGot}\r\n        zoom={2}\r\n        scrollWheelZoom={true}\r\n        whenCreated={setMap}\r\n        className=\"map\"\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n      </MapContainer>\r\n    ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {map ? <DisplayPosition map={map} /> : null}\r\n      {displayMap}\r\n      <button\r\n        className=\"get-location-report-btn\"\r\n        onClick={() => {\r\n          console.log(\"currentPos:\", currentPos[0].lat);\r\n          getReportByMap(\r\n            currentPos[0].lat.toFixed(4),\r\n            currentPos[0].lng.toFixed(4)\r\n          );\r\n        }}\r\n      >\r\n        Get Report for this Location\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { HiSearchCircle } from \"react-icons/hi\";\r\n\r\nexport default function SearchBar({ fun }) {\r\n  const [string, setstring] = useState(\"\");\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        fun(string);\r\n      }}\r\n    >\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"cityname\"\r\n          className=\"search-input\"\r\n          placeholder=\"Enter City Name or Pincode\"\r\n          onChange={(e) => {\r\n            setstring(e.target.value);\r\n            // console.log(e.target.value);\r\n          }}\r\n        />\r\n        <HiSearchCircle\r\n          className=\"search-icon\"\r\n          onClick={() => {\r\n            console.log(\"Search:\", string);\r\n            fun(string);\r\n          }}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport CurrentReport from \"./components/CurrentReport\";\nimport MapComp from \"./components/MapComp\";\nimport SearchBar from \"./components/SearchBar\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [t, setT] = useState(0);\n  const [report, setReport] = useState({\n    temperature: 0,\n    city: \"city\",\n    country: \"country\",\n    humidity: 0,\n    feels_like: 0,\n    main: \"condition\",\n    description: \"overall weather\",\n  });\n  const [coord, setCoord] = useState({\n    lat: 0,\n    lon: 0,\n    zoom: 3,\n  });\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    // console.log(\"Effect:\", query);\n    if (query)\n      axios\n        .get(\n          `https://api.openweathermap.org/data/2.5/weather?q=${query}&units=metric&appid=da41a288bd22dd27ea33849666faa2a3`\n        )\n        .then(function (response) {\n          // handle success\n          console.log(response.data);\n          setReport({\n            temperature: response.data.main.temp,\n            city: response.data.name,\n            country: response.data.sys.country,\n            humidity: response.data.main.humidity,\n            feels_like: response.data.main.feels_like,\n            main: response.data.weather[0].main,\n            description: response.data.weather[0].description,\n          });\n          setCoord({\n            lat: response.data.coord.lat,\n            lon: response.data.coord.lon,\n            zoom: 14,\n          });\n        })\n        .catch(function (error) {\n          // handle error\n          alert(\"Invalid City Name\");\n          console.log(error);\n        })\n        .then(function () {\n          // always executed\n        });\n  }, [query, t]);\n\n  function getResult(string) {\n    // console.log(\"App:\", string);\n    setQuery(string);\n    setT(t + 1);\n  }\n\n  function getReportByMap(lat, lon) {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=da41a288bd22dd27ea33849666faa2a3`\n      )\n      .then(function (response) {\n        // handle success\n        // console.log(response.data);\n        setReport({\n          temperature: response.data.main.temp,\n          city: response.data.name,\n          country: response.data.sys.country,\n          humidity: response.data.main.humidity,\n          feels_like: response.data.main.feels_like,\n          main: response.data.weather[0].main,\n          description: response.data.weather[0].description,\n        });\n        setCoord({\n          lat: lat,\n          lon: lon,\n          zoom: 12,\n        });\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <SearchBar fun={getResult} />\n      <div className=\"top-container\">\n        <CurrentReport obj={report} />\n        <div className=\"map-container\">\n          <MapComp mapObj={coord} getReportByMap={getReportByMap} />\n          <MdLocationOn size=\"32\" className=\"map-marker\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}